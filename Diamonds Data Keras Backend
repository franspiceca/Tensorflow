import pandas as pd
import numpy as np
from seaborn import load_dataset 
from sklearn.model_selection import train_test_split

from seaborn import load_dataset
df = load_dataset("diamonds")
df.head()

#Creating my features and target variables
features = ['cut', 'color', 'clarity', 'carat', 'depth', 'table', 'x', 'y', 'z']
target = 'price'

#Preparing data for modeling (categorical and dropping nulls)
df.cut = pd.Categorical(df.cut)
df.color = pd.Categorical(df.color)
df.clarity = pd.Categorical(df.clarity)

df.cut = df.cut.cat.codes
df.color = df.color.cat.codes
df.clarity = df.clarity.cat.codes

df = df.dropna()

df.head()

#Making my X and y variables for later training/testing/splitting
X = df[features]
y = np.ravel(df[target])

#Training and testing data split
X_trainval, X_test, y_trainval, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

#Validation data splitting
X_train, X_valid, y_train, y_valid = train_test_split(X_trainval, y_trainval, test_size=0.2, random_state=1)


